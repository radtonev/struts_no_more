Given an entity Java class and a request to add a new field, modify the entity class to include the field,
its getter and setter.
If the DTO class has a parametrized constructor, add the new field to the parametrized constructor.
If the DTO class has a toString method, add the new field to the method.
Generate an SQL ALTER TABLE statement to add a column for this field in the corresponding
database table.
The column name should be exactly like the field name.
The type of the table field should be matching the Java type but for MySQL database.

Java entity class:
```Java
{{originalContent}}
```

Add this field:
- Name: {{fieldName}} 
- Type: {{fieldType}}
- Size: {{fieldSize}}
- Default value: {{fieldDefaultValue}}
- Nullable: {{fieldNullable}}

Extract the table name from the entity's class @Table annotation and use it as table name strictly in CamelCase.

Return:
1. The updated entity Java class.
2. The generated ALTER TABLE ADD COLUMN statement.